buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven" 
        }
        maven {
            url = "https://oss.sonatype.org/content/groups/public"
        }
        maven {
            url = "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
        classpath 'org.ajoberstar:gradle-git:0.10.1'
        classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.0.8"
    }
}

plugins {
  id "com.matthewprenger.cursegradle" version "1.0.8"
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'com.matthewprenger.cursegradle'
apply plugin: 'maven'

configurations {
    deployerJars
}

repositories {
    maven {
        name = "aliensvspredator"
        url = "http://maven.aliensvspredator.org/"
    }
}

def version_major=5
def version_minor=0
def version_micro=0
def version_minecraft="1.10.2"
def version_forge="12.18.3.2221"
def version_mappings="stable_29"
def mdxversion="2.0.0"
def curseforge_id="221641"
def curseforge_release_type="beta"

version = "${version_major}.${version_minor}.${version_micro}.${System.env.BUILD_NUMBER}"
group = "org.avp"
archivesBaseName = "aliensvspredator"

tasks.withType(JavaCompile) {
	sourceCompatibility = "1.8"
	targetCompatibility = "1.8"
	options.encoding = 'UTF-8'
}

minecraft {
    version = "${version_minecraft}-${version_forge}"
    runDir = "run"
    mappings = version_mappings
    
    replace "required-after:mdxlib", "required-after:mdxlib@[${mdxversion},)" 
    replaceIn 'AliensVsPredator.java'
}

println "Minecraft ${version_minecraft}"
println "Minecraft Forge ${version_minecraft} with mappings ${version_mappings}"
println "Minecraft Development Library X ${mdxversion}"

dependencies {
    deployerJars 'org.apache.maven.wagon:wagon-ftp:2.2'
    compile "com.arisux:mdxlib:${mdxversion}:deobf"
}

jar {
	archiveName = "[${version_minecraft}][${version}] ${archivesBaseName}.jar"
}

task srcJar(type: Jar) {
    from sourceSets.main.output
	archiveName = "[${version_minecraft}][${version}] ${archivesBaseName}-sources.jar"
    classifier = 'sources'
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
	archiveName = "[${version_minecraft}][${version}] ${archivesBaseName}-deobf.jar"
    classifier = 'deobf'
}

artifacts {
    archives srcJar, deobfJar
}

curseforge {
        apiKey = curseforge_api_key

        project {
            id = curseforge_id
            changelog = ''
            releaseType = hasProperty('curseforge_release_type') ? curseforge_release_type : 'release'

            mainArtifact jar
            addArtifact sourceJar
            addArtifact deobfJar

            relations {
                requiredLibrary 'mdxlib'
        }
    }
}

processResources {
    inputs.property "version", version
    inputs.property "mcversion", minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version':version, 'mcversion':minecraft.version
    }
        
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

idea {
    module {
        inheritOutputDirs = true 
    }
}

task("publishToMaven", dependsOn:"build") {
    description = "Uploads the artifacts generated during the build process to the aliensvspredator maven repository"

    uploadArchives {
        repositories.mavenDeployer {
            configuration = configurations.deployerJars
            repository(url: "ftp://maven.aliensvspredator.org/") {
                authentication(userName: mavenUsername, password: mavenPassword)
            }
            
            pom.project {
        		properties {
            		forgeVersion = version_minecraft
	            	mcVersion = minecraft.version
            	}
            }
        }
    }
}